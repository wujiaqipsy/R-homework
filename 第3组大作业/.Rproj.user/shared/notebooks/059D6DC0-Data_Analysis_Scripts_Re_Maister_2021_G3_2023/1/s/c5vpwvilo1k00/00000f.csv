"0","# 3 推断统计
# 3.1 将自变量数据类型转为因子
#将Condition和Association两列转换为因子变量，并自定义因子水平，并使用levels函数进行检查
SE_single$Condition <- as.factor(SE_single$Condition)     
SE_single$Association <- as.factor(SE_single$Association)     
SE_single <- SE_single |>
  dplyr::mutate(Association = forcats::fct_relevel(Association, ""self"", ""friend"", ""happy"", ""neutral""))
levels(SE_single$Condition)
"
"1","[1]"
"1"," ""RG_congruent""  "
"1"," ""RG_incongruent"""
"1","
"
"0","levels(SE_single$Association)"
"1","[1]"
"1"," ""self""   "
"1"," ""friend"" "
"1"," ""happy""  "
"1"," ""neutral"""
"1","
"
"0","# 3.2 非正交编码"
"0","#对比编码——比较分类变量的不同水平。所有被试均完成Self、Friend、Happy和Neutral四种不同的条件，各条件之间并不是完全独立的，因此采用非正交对比编码。在之前的代码中定义了Self、Friend、Happy和Neutral的因子水平"
"0","contrasts(SE_single$Association) <- cbind("
"0","  ""S vs. F"" = c(-.5,.5,0,0),          # Self 与 Friend 进行比较"
"0","  ""H vs. N"" = c(0,0,-.5,.5),          # Happy 与 Neutral 进行比较"
"0","  ""S vs. H"" = c(-.5,0,.5,0))          # Self 与 Happy 进行比较"
"0","#同上，PMT1与PMT2进行比较"
"0","contrasts(SE_single$Condition) <- cbind(""Con vs Inc"" = c(-.5,.5))"
"0",""
"0","#检查已设置的对比编码"
"0","contrasts(SE_single$Association)"
"1","       "
"1"," S vs. F"
"1"," H vs. N"
"1"," S vs. H"
"1","
self   "
"1","    -0.5"
"1","     0.0"
"1","    -0.5"
"1","
friend "
"1","     0.5"
"1","     0.0"
"1","     0.0"
"1","
happy  "
"1","     0.0"
"1","    -0.5"
"1","     0.5"
"1","
neutral"
"1","     0.0"
"1","     0.5"
"1","     0.0"
"1","
"
"0","contrasts(SE_single$Condition)"
"1","              "
"1"," Con vs Inc"
"1","
RG_congruent  "
"1","       -0.5"
"1","
RG_incongruent"
"1","        0.5"
"1","
"
